# Personal config file for a dual monitor (laptop & + external 144hz monitor ) 1080p setup

set $mod Mod1

# setting apps

set $browser	firefox
set $music	spotify
set $terminal terminator 
set $files	terminator -e ranger
set $mail thunderbird

# workspace layouts:

set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# sets monitors if multiple plugged in

workspace 1 output eDP-1-1 primary
workspace 2 output eDP-1-1 primary
workspace 3 output eDP-1-1 primary
workspace 4 output eDP-1-1 primary
workspace 5 output primary eDP-1-1
workspace 6 output primary eDP-1-1
workspace 7 output primary eDP-1-1
workspace 8 output primary eDP-1-1

# ----- Setting Gaps and border radius
#Set inner/outer gaps
gaps inner 16
gaps outer 6
# ----- 


#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Droid Sans Regular 8
# thin borders
hide_edge_borders smart

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym F4 kill

# change focus
bindsym $mod+h focus left 
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle


# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


# assigning programms to workspaces
assign [class="Thunderbird"] $ws1
assign [class="whatsdesk"] $ws2
assign [class="TelegramDesktop"] $ws2
# spotify is a retard (maybe discord too?
for_window [class="discord"] move to workspace $ws6
for_window [class="Spotify"] move to workspace $ws3
assign [class="terminator"] $ws4 
assign [class="jetbrains-pycharm-ce"] $ws5
assign [class="firefox"] $ws5
assign [class="Steam"] $ws6
assign [class="dota2"] $ws7

# Autostart apps
exec --no-startup-id sleep 1 && firefox 
exec --no-startup-id sleep 1 && optimus-manager-qt
exec --no-startup-id sleep 2 && $terminal
exec --no-startup-id sleep 2 && $files
exec --no-startup-id sleep 2 && $mail
exec --no-startup-id sleep 3 && $music
exec --no-startup-id sleep 3 && whatsdesk
exec --no-startup-id sleep 4 && telegram-desktop
exec --no-startup-id sleep 4 && discord
exec --no-startup-id sleep 4 && Steam

exec --no-startup-id picom -cC
exec --no-startup-id nm-applet
exec --no-startup-id nitrogen --restore


#backup packages lists:
exec pacman -Qqen > packages-repository.txt && pacman -Qqem > packages-AUR.txt
#set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600
# Desktop notifications
exec --no-startup-id /usr/bin/dunst

# set floating for apps needing it
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
# welcome and others
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Optimus-Manager-Qt" instance="optimus-manager-qt"] floating enable
#always run dota in fullscreen
for_window [class="dota2"] fullscreen enable

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"


### === i3 MODES === ###

# passthrough; disables all other key combinations"
mode "passthrough" {
    bindsym $mod+Escape mode "default"; exec  notify-send "DUNST_COMMAND_TOGGLE"
}
bindsym $mod+Escape mode "passthrough"

# Video output changer
mode "output" {
    bindsym $mod+Escape mode "default";
    bindsym a exec autorandr --load all 
    bindsym l exec autorandr --load laptop
    bindsym g exec autorandr --load gaming
    bindsym m exec autorandr --load movie
} 
bindsym  $mod+shift+0 mode "output"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l  resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676e7d
set $urgent-bg-color     #e53935
set $indicator-color     #a0a0a0

# set window colors
#                       border             background         text                 indicator
client.focused          $bg-color          $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator-color


### === POLYBAR === ###
exec_always --no-startup-id $HOME/Documents/scripts/MM_polybar.sh



#set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Pamac-manager"] floating enable

### === MULTIMEDIA === ###

# volume
bindsym XF86AudioRaiseVolume exec amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks

# granular volume control
bindsym $mod+XF86AudioRaiseVolume exec amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# mute
bindsym XF86AudioMute exec amixer sset Master toggle && killall -USR1 i3blocks

#bindsym XF86AudioPlay exec playerctl play
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

bindsym XF86AudioPlay exec mocp --toggle-pause
bindsym XF86AudioPause exec mocp --toggle-pause
bindsym XF86AudioStop exec mocp --togle-pause
bindsym XF86AudioNext exec mocp --next
bindsym XF86AudioPrev exec mocp --previous

bindsym $mod+F5 exec mocp --toggle-pause
bindsym $mod+F6 exec mocp --stop
bindsym $mod+F7 exec mocp --previous
bindsym $mod+F8 exec mocp --next


# Only works in intel/hybrid mode which i guess is ok for now
# should implement an autoswitch when no monitors are connected
#bindsym F11 exec "$HOME/Documents/scripts/down_bright.sh"
#bindsym F12 exec "$HOME/Documents/scripts/up_bright.sh"
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10


# App shortcuts
bindsym $mod+w exec $browser
bindsym $mod+n exec $files
bindsym Print exec "xfce4-screenshooter"
bindsym $mod+Return exec  $terminal

# Redirect sound to headphones
bindsym $mod+m exec "/usr/local/bin/switch-audio-port"


# Lock the system
bindsym $mod+ctrl+l exec ~/Documents/scripts/lockscreen.sh


# calling the polybar menu (which itself is a rofi script)
bindsym Super_L exec ~/.config/polybar/scripts/menu




